{"version":3,"sources":["API.utils.js","components/CardContainer/CardContainer.jsx","components/CountryPick/CountryPick.jsx","components/Chart/Chart.jsx","App.js","index.js"],"names":["URL","fetchData","country","a","changeableUrl","axios","get","data","confirmed","recovered","deaths","lastUpdate","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","CardContainer","Grid","container","spacing","justify","item","xs","component","Card","className","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toDateString","CountryPick","handleCountryChange","useState","setCountries","useEffect","fetchAPI","FormControl","NativeSelect","defaultValue","onChange","e","target","i","key","Chart","dailyData","setDailyData","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","length","borderColor","fill","App","props","setState","state","this","href","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.611f2fa6.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst URL = 'https://covid19.mathdro.id/api';\n\nexport const fetchData = async (country) => {\n    let changeableUrl = URL;\n\n    if (country) {\n        changeableUrl = `${URL}/countries/${country}`;\n    }\n\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(`${URL}/daily`);\n\n        return data.map(({ confirmed, deaths, reportDate: date }) => ({ confirmed: confirmed.total, deaths: deaths.total, date }));\n    } catch (error) {\n        return error;\n    }\n};\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(`${URL}/countries`);\n\n        return countries.map((country) => country.name);\n    } catch (error) {\n        return error;\n    }\n};","import React from 'react';\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\nimport CountUp from 'react-countup';\nimport './Cards.css';\nconst CardContainer = ({ data }) => {\n    if (!data) {\n        return 'Loading..'\n    }\n    let { confirmed, recovered, deaths, lastUpdate } = data;\n    return (\n        <div>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item xs component={Card} className='infected'>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Infected\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <CountUp start={0} end={confirmed.value} duration={2.75} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Number of active cases of COVID-19.\n                    </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item xs component={Card} className='recovered'>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Recovered\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <CountUp start={0} end={recovered.value} duration={2.75} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Number of Recovered cases of COVID-19.\n                    </Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item xs component={Card} className='deaths'>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>\n                            Deaths\n                        </Typography>\n                        <Typography variant=\"h5\" component=\"h2\">\n                            <CountUp start={0} end={deaths.value} duration={2.75} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">\n                            {new Date(lastUpdate).toDateString()}\n                        </Typography>\n                        <Typography variant=\"body2\" component=\"p\">\n                            Number of deaths from COVID-19.\n                    </Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default CardContainer","import React, { useState, useEffect } from 'react';\nimport { NativeSelect, FormControl } from '@material-ui/core';\nimport './CountryPick.css';\nimport { fetchCountries } from '../../API.utils';\n\nconst CountryPick = ({ handleCountryChange }) => {\n    const [countries, setCountries] = useState([]);\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setCountries(await fetchCountries());\n        };\n        fetchAPI();\n    }, []);\n    return (\n        <FormControl className='form-control'>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {countries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    );\n};\n\nexport default CountryPick;\n","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\nimport { fetchDailyData } from '../../API.utils';\n\nimport './Chart.css';\n\nconst Chart = ({ data, country }) => {\n    const [dailyData, setDailyData] = useState([]);\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n\n            setDailyData(initialDailyData);\n        };\n\n        fetchMyAPI();\n    }, []);\n    if (!data) {\n        return 'Loading..'\n    }\n    let { confirmed, deaths, recovered } = data;\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected', 'Recovered', 'Deaths'],\n                    datasets: [\n                        {\n                            label: 'People',\n                            backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n                            data: [confirmed.value, recovered.value, deaths.value],\n                        },\n                    ],\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: `Current state in ${country}` },\n                }}\n            />\n        ) : null\n    );\n    const lineChart = (\n        dailyData.length ? <Line data={{\n            labels: dailyData.map(({ date }) => date),\n            datasets: [{\n                data: dailyData.map(({ confirmed }) => confirmed),\n                label: 'Infected',\n                borderColor: '#3333ff',\n                fill: true,\n            }, {\n                data: dailyData.map(({ deaths }) => deaths),\n                label: 'Deaths',\n                borderColor: 'red',\n                backgroundColor: 'rgba(255,0,0,0.5)',\n                fill: true,\n            }],\n\n        }}\n        /> : null\n    );\n    return (\n        <div className='chart-container'>\n            {country ? barChart : lineChart}\n        </div>\n    )\n}\n\nexport default Chart;","import React, { Component } from 'react';\nimport { fetchData } from './API.utils.js';\nimport CardContainer from './components/CardContainer/CardContainer';\nimport CountryPick from './components/CountryPick/CountryPick';\nimport Chart from './components/Chart/Chart';\n\nimport './App.scss';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: null,\n      country: ''\n    };\n  }\n  async componentDidMount() {\n    const data = await fetchData();\n    this.setState({ data });\n  }\n  handleCountryChange = async (country) => {\n    const data = await fetchData(country);\n    this.setState({ data, country });\n  }\n  render() {\n    const { data, country } = this.state;\n    return (\n      <div className=\"container\" >\n        <h1> Covid-19 Tracker </h1>\n        <h6>All data gathered from <a href='https://github.com/mathdroid/covid-19-api'>John Hopkins CSSE</a></h6>\n        <CardContainer data={data} />\n        <CountryPick handleCountryChange={this.handleCountryChange} />\n        <Chart data={data} country={country} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}